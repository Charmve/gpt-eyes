{
    "summary": "\"GPT Eyes\" project uses vision and AI to identify objects, search web for info, and answer questions. It utilizes React frontend, TensorFlow Models - MobileNet API, and GPT API with instructions on installing dependencies, configuring keys, starting server, and using the app.",
    "details": [
        {
            "comment": "This code describes a project called \"GPT Eyes\" that uses a vision model and AI to identify objects in a scene, search the web for information, and accurately answer questions. The author asks for sponsorship to support further development of the project.",
            "location": "\"/media/root/Toshiba XG3/works/gpt-eyes/docs/src/README.md\":0-25",
            "content": "# GPT Eyes\nI gave GPT-4 eyes. \"\u773c\u89c2\u516d\u8def\uff0c\u8033\u542c\u516b\u65b9\"\n<video src=\"https://github.com/Charmve/gpt-eyes/raw/main/src/ssstwitter.com_1693805997510.mp4\" controls=\"controls\" style=\"max-width: 730px;\"></video>\nHere\u2019s what I did:\n- added some data to a vision model\n- gave the AI camera access\n- asked it questions about the scene\n- it identified objects\n- it searched web for info\n- used that info to accurately answer\nWatch it get 3 questions 100% correct!\n- Twitter https://twitter.com/mckaywrigley/status/1651291367224807424?s=20\n- YouTube https://www.youtube.com/watch?v=w-wxguIs-0I\n## This Package Is Sponsorware \ud83d\udcb0\ud83d\udcb0\ud83d\udcb0\n[![](https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86)](https://github.com/sponsors/Charmve?frequency=one-time&sponsor=Charmve) https://github.com/sponsors/Charmve?frequency=one-time&sponsor=Charmve\nThis repo was only available to my sponsors on GitHub Sponsors until I reached 15 sponsors.\nLearn more about **Sponsorware** at [github.com/sponsorware/docs](https://github.com/sponsorware/docs) \ud83d\udcb0."
        },
        {
            "comment": "\"This code describes a project that utilizes React for the frontend, TensorFlow Models - MobileNet for image analysis API, and GPT API for text generation. It provides instructions on how to install dependencies, configure API keys, start the development server, and use the application.\"",
            "location": "\"/media/root/Toshiba XG3/works/gpt-eyes/docs/src/README.md\":27-57",
            "content": "## Technologies Used\n- Frontend: React\n- Image Analysis API: TensorFlow Models - MobileNet\n- Text Generation API: GPT API\n## Installation\n1. Clone the repository: `git clone https://github.com/Charmve/gpt-eyes.git`\n2. Navigate to the project directory: `cd gpt-eyes`\n3. Install dependencies: `npm install`\n## Configuration\n1. Create an account and obtain API keys for TensorFlow Models - MobileNet and GPT API.\n2. Update the configuration file with your API keys:\n   - TensorFlow Models - MobileNet: `/path/to/config.js`\n   - GPT API: `/path/to/config.js`\n## Usage\n1. Start the development server: `npm start`\n2. Open your browser and visit: `http://localhost:3000`\n## How it Works\n1. Device camera analyses an image.\n2. The application uses TensorFlow Models - MobileNet API to analyze the image and extract object information.\n3. The application sends the analyzed object information to the GPT API.\n4. The GPT API generates text describing the analyzed object.\n5. The application displays the analyzed image and the generated text."
        }
    ]
}